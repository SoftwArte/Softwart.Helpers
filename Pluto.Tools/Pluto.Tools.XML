<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Pluto.Tools</name>
    </assembly>
    <members>
        <member name="M:Pluto.Tools.Hasher.CreateHash(System.String,Pluto.Tools.Hasher.HashAlgorithm)">
            <summary>
            Create and return a hash of string value passed, 
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Pluto.Tools.Hasher.CreateHash(System.Byte[],Pluto.Tools.Hasher.HashAlgorithm)">
            <summary>
            Create a return a hash of byte array.
            </summary>
            <param name="byteArray"></param>
            <param name="algorithm"></param>
            <returns></returns>
        </member>
        <member name="T:Pluto.Tools.Crypter">
            <summary>
            Esta clase contiene metodos para realizar operaciones de cifrado de cadenas y
            archivos. Todos los metodos son estáticos.
            </summary>
            <requirements>Ninguno</requirements>
        </member>
        <member name="M:Pluto.Tools.Crypter.EncryptDes(System.String)">
            <summary>
            	<para>Encripta una cadena de texto con el metodo de encriptación
                <strong>DES</strong>, las claves de encriptación están embebidas en el
                código.</para>
            	<para>Sólo admite cadenas en formato UTF-8.</para>
            </summary>
            <returns>Cadena encriptada codificada en base 64.</returns>
            <remarks>
            	<para>Usa una clave interna de 8 caracteres. Sólo admite cadenas en formato
                UTF-8.</para>
            </remarks>
            <example>
            	<code lang="CS">
            String MyString = Crypter.EncryptDes(stringToEncrypt);
            </code>
            </example>
            <param name="texto">
            	<para>Cadena o texto a encriptar en formato UTF-8. Todos los caracteres fuera del
                rango de UTF-8 serán trasladados a su equivalente dentro del rango.</para>
            </param>
        </member>
        <member name="M:Pluto.Tools.Crypter.DecryptDes(System.String)">
            <summary>
            	<para>Desencripta una cadena de texto utilizando el metodo de encriptación
                <strong>DES</strong>, las claves de encriptación están embebidas en el
                código.</para>
            	<para>La salida es en formato UTF-8.</para>
            </summary>
            <returns>Cadena desencriptada en formato UTF-8.</returns>
            <remarks><para>La clave interna de encriptación es de 8 caracteres fijos.</para></remarks>
            <example>
            	<code lang="CS" title="[New Example]">
            	</code>
            	<code lang="CS">
            String MyString = Crypter.DecryptDes(stringToDecrypt);
            </code>
            </example>
            <param name="texto">Cadena a desencriptar.</param>
        </member>
        <member name="M:Pluto.Tools.Crypter.DecrypFileContent(System.String)">
            <summary>
            	<para>Desencripta un archivo utilizando el metodo "EncryptDes".</para>
            	<para>La salida proporcionada es en formato UTF-8.</para>
            </summary>
            <returns>Contenido del archivo desencriptado, en formato UTF-8.</returns>
            <remarks><para>Devuelve el contenido desencriptado en formato UTF-8.</para></remarks>
            <example>
            	<para></para>
            	<code lang="CS">
            String MyString = Crypter.DecrypFileContent(RutaArchivo);
            </code>
            </example>
            <param name="filepath">Full path del archivo a encriptar.</param>
        </member>
        <member name="M:Pluto.Tools.Crypter.EncryptFileContent(System.String)">
            <summary>
            	<para>Encripta el contenido de un archivo especificado y devuelve como una cadena
                el resultado de la encriptación.</para>
            	<para>Sólo admite formato de texto UTF-8.</para>
            </summary>
            <returns>Contenido del archivo encriptado codificado en base64.</returns>
            <example>
            	<code lang="CS">
            String ContenidoEncriptado = Crypter.EncryptFileContent(RutaArchivo);
            </code>
            </example>
            <param name="filepath">Ruta absoluta completa del archivo a Encriptar.</param>
        </member>
        <member name="T:Pluto.Tools.Cloner">
            <summary>2 métodos deep-clone, uno binario para ISerializables y otro XML basado en DataContractSerializer para tipos marcados con el
            atributo [DataContractAttribute()]</summary>
        </member>
        <member name="M:Pluto.Tools.Cloner.BinaryClone``1(``0)">
            <summary> 
            Perform a deep Copy of the object. 
            </summary> 
            <typeparam name="T">The type of object being copied.</typeparam> 
            <param name="source">The object instance to copy.</param> 
            <returns>The copied object.</returns> 
        </member>
        <member name="M:Pluto.Tools.SchemaTools.SchemaValidator(System.Xml.Linq.XElement,System.String)">
            <summary>
            Valida un fragmento Xml contra un esquema residente en un fichero.
            </summary>
            <param name="value">Fragmento Xml.</param>
            <param name="schemaFullPathName">Ruta absoluta completa del esquema.</param>
        </member>
        <member name="M:Pluto.Tools.SchemaTools.SchemaValidator(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchema)">
            <summary>
            Valida un fragmento Xml contra un esquema como XmlSchema.
            </summary>
            <param name="value"></param>
            <param name="schema"></param>
            <returns></returns>
        </member>
        <member name="M:Pluto.Tools.SchemaTools.SchemaValidator(System.String,System.String)">
            <summary>
            Validate an xml fragment against a xmlSchema from strings.
            </summary>
            <param name="value"></param>
            <param name="schemaDefinition"></param>
            <returns></returns>
        </member>
        <member name="T:Pluto.Tools.Dates">
            <summary>
            Helper class to dates operations.
            </summary>
        </member>
        <member name="T:Pluto.Tools.Reflector">
            <summary>
            Clase con métodos para la invocación dinámica de miembros de clases genericas por reflection.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Pluto.Tools.Reflector.GenericLinqExpressionReflected(System.Type[])" -->
        <member name="M:Pluto.Tools.Reflector.GetTypeByName(System.String,System.String)">
            <summary>
            Devuelve el Type por su nombre largo incluido el namespace. Busca en el ensamblado predeterminado.
            </summary>
            <param name="typeLongName"></param>
            <returns></returns>
        </member>
        <member name="M:Pluto.Tools.Reflector.GetSubyacentTypeOfProperty(System.Type,System.String)">
            <summary>
            Devuelve el tipo del argumento generico del tipo declarado un una propiedad de una entidad.
            </summary>
            <param name="mainType"></param>
            <param name="propertyTypeName"></param>
            <returns></returns>
        </member>
        <member name="M:Pluto.Tools.Reflector.InvocadorGenerico(System.Type,System.Type,System.String,System.Type[],System.Object[])">
            <summary>
            Invoca un metodo de un tipo generico, solo admite un parametro generico.
            </summary>
            <param name="type"></param>
            <param name="genericParameter"></param>
            <param name="methodName"></param>
            <param name="parameters"></param>
            <param name="values"></param>
            <returns>Devuelve un object, pero si internamente era una coleccion implementa IEnumerable.</returns>
        </member>
        <member name="M:Pluto.Tools.Reflector.InvocadorGenericoMultiple(System.Type,System.Type[],System.String,System.Type[],System.Object[])">
            <summary>
            Invoca un metodo generico con múltiples parametros genéricos.
            </summary>
            <param name="type"></param>
            <param name="genericParameters"></param>
            <param name="methodName"></param>
            <param name="parameters"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Pluto.Tools.Reflector.PropertyInfoSetter(System.Object,System.String,System.Object)" -->
        <member name="M:Pluto.Tools.WebTools.GetPage(System.Uri)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:Pluto.Tools.WebTools.GetWebResourceBinary(System.String)">
            <summary>
            Download and return a binary representation of a web resource as byte array.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Pluto.Tools.WebTools.GetWebImage(System.String)">
            <summary>
            Download and return an image from url.
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:Pluto.Tools.WebTools.GetAbsoluteUrl(System.String,System.String)">
            <summary>
            Compound an absolute url with a base url and a url part.
            </summary>
            <param name="baseUrl"></param>
            <param name="urlFragment"></param>
            <returns></returns>
        </member>
        <member name="M:Pluto.Tools.RgExpression.Extract(System.String,System.String)">
            <summary>
            Get the first ocurrence that validate the rule.
            </summary>
            <param name="source"></param>
            <param name="rule">Regular expression rule.</param>
            <returns></returns>
        </member>
        <member name="M:Pluto.Tools.LinqToXml.GetTextFromXElement(System.Xml.Linq.XElement)">
            <summary>
            Obtiene el valor de un node Xml y devuelve un string con el valor, devolverá una cadena vacio si el nodo es nulo.
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:Pluto.Tools.LinqToXml.GetTextFromAttribute(System.Xml.Linq.XAttribute,System.String)">
            <summary>
            Return string value from attribute if its not null else return default value.
            </summary>
            <param name="attribute"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Pluto.Tools.LinqToXml.GetBoolFromAttribute(System.Xml.Linq.XAttribute)">
            <summary>
            Obtiene el valor booleano de un attributo, si el atributo no existe se devuelve false.
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="T:Pluto.Tools.PredicateBuilder">
            <summary>
            
            </summary>
        </member>
    </members>
</doc>
